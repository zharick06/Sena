 /*Pedidos*/ 
CREATE OR REPLACE FUNCTION Pedidos()
  RETURNS trigger AS
$BODY$
BEGIN
   INSERT INTO pedido(fecha)
        VALUES(now());
END;
$BODY$
language plpgsql;

CREATE TRIGGER pedidos_AI
  After insert
  ON pedido
  FOR EACH ROW
  EXECUTE PROCEDURE Pedidos();
  
  
 /*Facturas*/ 

CREATE OR REPLACE FUNCTION Facturas()
 Returns trigger as 
 $BODY$
 BEGIN
  INSERT INTO facturas(fecha)
        VALUES(now());
END;
$BODY$
language plpgsql;	

CREATE TRIGGER facturas_AI
  After insert
  ON facturas
  FOR EACH ROW
  EXECUTE PROCEDURE Facturas();
  
  
  
  
  
  CREATE OR REPLACE FUNCTION generate_password() RETURNS TEXT AS 
  $$
  DECLARE
>  len ALIAS FOR $1;
   letras = ["a","b","c","d","e","f","g","h","i","j","k","l","n","m","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9"]
>  cnt INTEGER;
>  password TEXT :='';
>
>  
> BEGIN
>
>  FOR cnt IN 1..len LOOP
>    password := password || chr(round((random()*87)+35)::integer);
>  END LOOP;
>
>  password :=
>translate(password,characters_not_included,substr(md5(random()::text),ro
>und((random()*(32-
>char_length(characters_not_included))))::integer,char_length(characters_
>not_included)));
>
>RETURN password;
>
>END;
>$$ LANGUAGE plpgsql;
  
  
  
  
		
		
    
 
 
 
 